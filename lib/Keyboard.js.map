{"version":3,"sources":["../src/Keyboard.js"],"names":["Keyboard","props","handleLetterButtonClick","bind","handleBackspaceClick","handleLanguageClick","handleShiftClick","handleSymbolsClick","getSymbolsKeyValue","getKeys","state","currentLanguage","showSymbols","uppercase","checkUppercase","setState","key","inputNode","value","selectionStart","selectionEnd","nextValue","substring","onClick","setTimeout","focus","setSelectionRange","dispatchEvent","Event","type","dataset","length","nextSelectionPosition","keysSet","map","keyRow","toUpperCase","symbolsKeyValue","leftButtons","rightButtons","keys","numbers","button","propTypes","arrayOf","node","any","isRequired","func","defaultProps"],"mappings":"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","file":"Keyboard.js","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport KeyboardButton from './KeyboardButton';\n\nimport LatinLayout from './layouts/LatinLayout';\nimport CyrillicLayout from './layouts/CyrillicLayout';\nimport SymbolsLayout from './layouts/SymbolsLayout';\n\nimport BackspaceIcon from './icons/BackspaceIcon';\nimport LanguageIcon from './icons/LanguageIcon';\nimport ShiftIcon from './icons/ShiftIcon';\n\nexport default class Keyboard extends Component {\n\tstatic propTypes = {\n\t\tleftButtons: PropTypes.arrayOf(PropTypes.node),\n\t\trightButtons: PropTypes.arrayOf(PropTypes.node),\n\t\tinputNode: PropTypes.any.isRequired,\n\t\tonClick: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {\n\t\tleftButtons: [],\n\t\trightButtons: [],\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleLetterButtonClick = this.handleLetterButtonClick.bind(this);\n\t\tthis.handleBackspaceClick = this.handleBackspaceClick.bind(this);\n\t\tthis.handleLanguageClick = this.handleLanguageClick.bind(this);\n\t\tthis.handleShiftClick = this.handleShiftClick.bind(this);\n\t\tthis.handleSymbolsClick = this.handleSymbolsClick.bind(this);\n\t\tthis.getSymbolsKeyValue = this.getSymbolsKeyValue.bind(this);\n\t\tthis.getKeys = this.getKeys.bind(this);\n\t\tthis.state = {\n\t\t\tcurrentLanguage: 'latin',\n\t\t\tshowSymbols: false,\n\t\t\tuppercase: this.checkUppercase(),\n\t\t};\n\t}\n\n\thandleLanguageClick() {\n\t\tthis.setState({currentLanguage: this.state.currentLanguage === 'latin' ? 'cyrrilic' : 'latin'});\n\t}\n\n\thandleShiftClick() {\n\t\tthis.setState({uppercase: !this.state.uppercase});\n\t}\n\n\thandleSymbolsClick() {\n\t\tthis.setState({showSymbols: !this.state.showSymbols});\n\t}\n\n\thandleLetterButtonClick(key) {\n\t\tconst {inputNode} = this.props;\n\t\tconst {value, selectionStart, selectionEnd} = inputNode;\n\t\tconst nextValue = value.substring(0, selectionStart) + key + value.substring(selectionEnd);\n\n\t\tinputNode.value = nextValue;\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(nextValue);\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tinputNode.focus();\n\t\t\tinputNode.setSelectionRange(selectionStart + 1, selectionStart + 1);\n\t\t}, 0);\n\t\tthis.setState({uppercase: this.checkUppercase()});\n\t\tinputNode.dispatchEvent(new Event('change'));\n\t}\n\n\tcheckUppercase() {\n\t\tconst {inputNode} = this.props;\n\t\treturn inputNode.type !== 'password' &&\n\t\t\tinputNode.dataset.type !== 'email' &&\n\t\t\t!inputNode.value.length\n\t}\n\n\thandleBackspaceClick() {\n\t\tconst {inputNode} = this.props;\n\t\tconst {value, selectionStart, selectionEnd} = inputNode;\n\t\tlet nextValue;\n\t\tlet nextSelectionPosition;\n\t\tif (selectionStart === selectionEnd) {\n\t\t\tnextValue = value.substring(0, selectionStart - 1) + value.substring(selectionEnd);\n\t\t\tnextSelectionPosition = selectionStart - 1;\n\t\t} else {\n\t\t\tnextValue = value.substring(0, selectionStart) + value.substring(selectionEnd);\n\t\t\tnextSelectionPosition = selectionStart;\n\t\t}\n\t\tnextSelectionPosition = (nextSelectionPosition > 0) ? nextSelectionPosition : 0;\n\n\t\tinputNode.value = nextValue;\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(nextValue);\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tinputNode.focus();\n\t\t\tinputNode.setSelectionRange(nextSelectionPosition, nextSelectionPosition);\n\t\t}, 0);\n\t\tthis.setState({uppercase: this.checkUppercase()});\n\t\tinputNode.dispatchEvent(new Event('change'));\n\t}\n\n\tgetKeys() {\n\t\tlet keysSet;\n\t\tif (this.state.showSymbols) {\n\t\t\tkeysSet = SymbolsLayout;\n\t\t} else if (this.state.currentLanguage === 'latin') {\n\t\t\tkeysSet = LatinLayout;\n\t\t} else {\n\t\t\tkeysSet = CyrillicLayout;\n\t\t}\n\n\t\treturn this.state.uppercase ?\n\t\t\tkeysSet.map(keyRow => keyRow.map(key => key.toUpperCase()))\n\t\t\t: keysSet;\n\t}\n\n\tgetSymbolsKeyValue () {\n\t\tlet symbolsKeyValue;\n\t\tif (!this.state.showSymbols) {\n\t\t\tsymbolsKeyValue = '.?!&';\n\t\t} else if (this.state.currentLanguage === 'latin') {\n\t\t\tsymbolsKeyValue = 'Abc';\n\t\t} else {\n\t\t\tsymbolsKeyValue = 'Абв';\n\t\t}\n\t\treturn symbolsKeyValue;\n\t}\n\n\trender() {\n\t\tconst {leftButtons, rightButtons, inputNode} = this.props;\n\t\tconst keys = this.getKeys();\n\t\tconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n\t\tconst symbolsKeyValue = this.getSymbolsKeyValue();\n\n\t\treturn (\n\t\t\t<div className=\"keyboard\">\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{numbers.map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tclasses={\"keyboard-numberButton\"}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={<BackspaceIcon />}\n\t\t\t\t\t\tonClick={this.handleBackspaceClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{keys[0].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t<div className=\"keyboard-halfButton\"></div>\n\t\t\t\t\t{keys[1].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"keyboard-halfButton\"></div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={<ShiftIcon />}\n\t\t\t\t\t\tonClick={this.handleShiftClick}\n\t\t\t\t\t/>\n\t\t\t\t\t{keys[2].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={symbolsKeyValue}\n\t\t\t\t\t\tonClick={this.handleSymbolsClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{leftButtons}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={<LanguageIcon />}\n\t\t\t\t\t\tonClick={this.handleLanguageClick}\n\t\t\t\t\t/>\n\t\t\t\t\t{inputNode.dataset.type === 'email' ?\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'@'}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t: null}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={' '}\n\t\t\t\t\t\tclasses=\"keyboard-space\"\n\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t/>\n\t\t\t\t\t{inputNode.dataset.type === 'email' ?\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'.'}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t: null}\n\t\t\t\t\t{rightButtons}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}